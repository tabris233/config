""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-plug plugin manager
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" ============================================================================
" Vim-plug initialization
" Avoid modify this section, unless you are very sure of what you are doing

let vim_plug_just_installed = 0
let vim_plug_path = expand('~/.config/nvim/autoload/plug.vim')
if !filereadable(vim_plug_path)
    echo "Installing Vim-plug..."
    echo "silent !mkdir -p ~/.config/nvim/autoload"
    silent !curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    let vim_plug_just_installed = 1
endif

" manually load vim-plug the first time
if vim_plug_just_installed
    :execute 'source '.fnameescape(vim_plug_path)
endif

" Obscure hacks done, you can now modify the rest of the .vimrc as you wish :)
" ============================================================================
call plug#begin('~/.config/nvim/autoload')

Plug 'yianwillis/vimcdoc'                          " Chinese help

Plug 'rhysd/accelerated-jk', {'on':['<Plug>(accelerated_jk_gj)' , '<Plug>(accelerated_jk_gk)']} " jk 加速

Plug 'chrisbra/changesPlugin'                      " 查看文件修改

Plug 'glacambre/firenvim', { 'do': { _ -> firenvim#install(0, 'export PATH=\"$PATH\"') } }

" 代码补全
Plug 'neoclide/coc.nvim', {'branch': 'release'}    " coc intellisense

Plug 'jiangmiao/auto-pairs'                        " 括号自动补全
Plug 'vim-syntastic/syntastic'                     " 静态代码分析

" git help plugin
Plug 'tpope/vim-fugitive'                          " git plugin
Plug 'airblade/vim-gitgutter'                      "

Plug 'Yggdroot/indentLine'                         " 展示<tab>的竖线
Plug 't9md/vim-choosewin'                          " 选择window 主要给defx用


Plug 'kevinhwang91/rnvimr'

if has('nvim')
  Plug 'Shougo/defx.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/defx.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif
Plug 'kristijanhusak/defx-git'                     " defx git plugin
Plug 'kristijanhusak/defx-icons'                   " defx icons

Plug 'mg979/vim-visual-multi'                      " 多光标操作
" Plug 'mhinz/vim-startify'                          " start page
Plug 'glepnir/dashboard-nvim'

Plug 'junegunn/fzf', {'on':['Files', 'History', 'Colors', 'Rg', 'Marks'] }
Plug 'junegunn/fzf.vim', {'on':['Files', 'History', 'Colors', 'Rg', 'Marks']}

Plug 'luochen1990/rainbow'                         " 彩虹括号

" color/scheme/
Plug 'guns/xterm-color-table.vim'                  "
Plug 'ap/vim-css-color'                            "
Plug 'hardcoreplayers/spaceline.vim'               " status line
" Use the icon plugin for better behavior
Plug 'ryanoasis/vim-devicons'
Plug 'bagrat/vim-buffet'                           " tab view

Plug 'rakr/vim-one'                                " vim-one 主题

call plug#end()

" ============================================================================
" Install plugins the first time vim runs
let s:vim_plug_installing = 0
if vim_plug_just_installed
    let s:vim_plug_installing = 1
    echo "Installing vim-plug, please ignore key map error messages"
    :PlugInstall
endif

source ~/.config/nvim/plug/plug_settings.nvim
